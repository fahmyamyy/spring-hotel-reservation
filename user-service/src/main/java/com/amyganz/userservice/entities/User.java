package com.amyganz.userservice.entities;

//import io.swagger.annotations.ApiModelProperty;
import lombok.*;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import javax.persistence.*;
import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Date;

@Entity
@Table(name="users")
@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
@ToString
public class User implements Serializable {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
//    @ApiModelProperty(notes = "Autogenerated ID, User's Primary Key")
    @Column(name = "userId", unique = true)
    private Long id;
//    @ApiModelProperty(notes = "User's Full name")
    @Column(nullable = false)
    private String fullname;
//    @ApiModelProperty(notes = "User's Email (Unique)")
    @Column(unique = true, nullable = false)
    private String email;
//    @ApiModelProperty(notes = "User's Username (Unique)")
    @Column(unique = true, nullable = false)
    private String username;
//    @ApiModelProperty(notes = "User's Password, Must contain: One Uppercase, One Number and One Symbol")
    @Column(nullable = false)
    private String password;
//    @ApiModelProperty(notes = "User's Date of Birth, Must above 18 years old")
    @Column(columnDefinition = "DATE")
    private Date dob;
//    @ApiModelProperty(notes = "User's Gender")
    @Column(nullable = false)
    private Character gender;
//    @ApiModelProperty(notes = "User's Role, default as \"user\"")
    @Column(nullable = false)
    private String role;
//    @ApiModelProperty(notes = "User's One Time Password")
    @Column(length = 6)
    private String otp;
//    @ApiModelProperty(notes = "User's One Time Password Expired")
    @Column(name = "otp_expired")
    private LocalDateTime otpExpired;
//    @ApiModelProperty(notes = "User's current status, default \"true\"")
    @Column(nullable = false)
    private Boolean status = true;
    @CreationTimestamp
    @Column(name = "created_at", nullable = false, updatable = false)
    private LocalDateTime createdAt;

    @UpdateTimestamp
    @Column(name = "updated_at")
    private LocalDateTime updatedAt;

    @Column(name = "deleted_at")
    private LocalDateTime deletedAt;
}
