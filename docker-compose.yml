version: '3'

services:
  gateway-service:
    platform: 'linux/amd64'
    image: 'gateway-service:latest'
    container_name: gateway-service
    build:
      context: gateway-service
      dockerfile: Dockerfile
    environment:
      - PORT_AUTH=http://auth-service:8081/
      - PORT_USER=http://user-service:8082/
      - PORT_HOTEL=http://hotel-service:8083/
      - PORT_RESERVATION=http://reservation-service:8084/
      - PORT_NOTIFICATION=http://notification-service:8085/
    expose:
      - "8080"
    ports:
      - "8080:8080"
  auth-service:
    platform: 'linux/amd64'
    image: 'auth-service:latest'
    container_name: auth-service
    build:
      context: auth-service
      dockerfile: Dockerfile
    depends_on:
      - user-db
      - zookeeper
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user_db
      - SPRING_DATASOURCE_USERNAME=user_db
      - SPRING_DATASOURCE_PASSWORD=user_db
      - RSA.PRIVATE-KEY=classpath:certs/private.pem
      - RSA.PUBLIC-KEY=classpath:certs/public.pem
      - SERVER_PORT=8081
#      - SPRING_KAFKA_BOOTSTRAPSERVERS=kafka:29092
      - SPRING.KAFKA.BOOTSTRAP-SERVERS=kafka:9092
    expose:
      - "8081"
    ports:
      - "8081:8081"
  user-service:
    platform: 'linux/amd64'
    image: 'user-service:latest'
    container_name: user-service
    build:
      context: user-service
      dockerfile: Dockerfile
    depends_on:
      - user-db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user_db
      - SPRING_DATASOURCE_USERNAME=user_db
      - SPRING_DATASOURCE_PASSWORD=user_db
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SERVER_PORT=8082
    expose:
      - "8082"
    ports:
      - "8082:8082"
  hotel-service:
    platform: 'linux/amd64'
    image: 'hotel-service:latest'
    container_name: hotel-service
    build:
      context: hotel-service
      dockerfile: Dockerfile
    depends_on:
      - hotel-db
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://hotel-db:5432/hotel_db
      - SPRING_DATASOURCE_USERNAME=hotel_db
      - SPRING_DATASOURCE_PASSWORD=hotel_db
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SPRING.REDIS.HOST=redis
      - SPRING.REDIS.PORT=6379
      - SERVER_PORT=8083
    expose:
      - "8083"
    ports:
      - "8083:8083"
  reservation-service:
    platform: 'linux/amd64'
    image: 'reservation-service:latest'
    container_name: reservation-service
    build:
      context: reservation-service
      dockerfile: Dockerfile
    depends_on:
      - reservation-db
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://reservation-db:5432/reservation_db
      - SPRING_DATASOURCE_USERNAME=reservation_db
      - SPRING_DATASOURCE_PASSWORD=reservation_db
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - PORT_USER=http://user-service:8082/
      - PORT_HOTEL=http://hotel-service:8083/
      - SPRING.KAFKA.BOOTSTRAP-SERVERS=kafka:9092
      - SERVER_PORT=8084
      - SPRING.REDIS.HOST=redis
      - SPRING.REDIS.PORT=6379
      - SPRING.SQL.INIT.PLATFORM=postgresql
      - SPRING.SQL.INIT.DATA-LOCATIONS=classpath:data.sql
      - SPRING.SQL.INIT.MODE=always
      - SPRING.SQL.INIT.CONTINUE-ON-ERROR=true
      - SPRING.JPA.DEFER-DATASOURCE-INITIALIZATION=true
    expose:
      - "8084"
    ports:
      - "8084:8084"
  notification-service:
    platform: 'linux/amd64'
    image: 'notification-service:latest'
    container_name: notification-service
    build:
      context: notification-service
      dockerfile: Dockerfile
    depends_on:
      - zookeeper
      - kafka
    environment:
      - SPRING.MAIL.HOST=smtp.gmail.com
      - SPRING.MAIL.PORT=587
      - SPRING.MAIL.USERNAME=fahmy.malikk@gmail.com
      - SPRING.MAIL.PASSWORD=jdacsgnhkzjiuzcl
      - SPRING.MAIL.PROPERTIES.MAIL.SMTP.STARTTLS.ENABLE=true
      - SPRING.MAIL.PROPERTIES.MAIL.SMTP.STARTTLS.REQUIRED=true
      - SPRING.KAFKA.BOOTSTRAP-SERVERS=kafka:9092
      - server.port=8085
    expose:
      - "8085"
    ports:
      - "8085:8085"

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  redis:
    image: redis
    ports:
      - "6379:6379"

  user-db:
    image: 'postgres:15-alpine'
    container_name: user-db
    environment:
      - POSTGRES_USER=user_db
      - POSTGRES_PASSWORD=user_db
      - POSTGRES_DB=user_db
    volumes:
      - user_db:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  hotel-db:
    image: 'postgres:15-alpine'
    container_name: hotel-db
    environment:
      - POSTGRES_USER=hotel_db
      - POSTGRES_PASSWORD=hotel_db
      - POSTGRES_DB=hotel_db
    volumes:
      - hotel_db:/var/lib/postgresql/data
    ports:
      - "5434:5432"
  reservation-db:
    image: 'postgres:15-alpine'
    container_name: reservation-db
    environment:
      - POSTGRES_USER=reservation_db
      - POSTGRES_PASSWORD=reservation_db
      - POSTGRES_DB=reservation_db
    volumes:
      - reservation_db:/var/lib/postgresql/data
    ports:
      - "5435:5432"
volumes:
  user_db:
  hotel_db:
  reservation_db:
